cmake_minimum_required(VERSION 3.10)
project(c__threads)

set(CMAKE_CXX_STANDARD 11)
set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS}  -std=c++11 -pthread")

add_executable(hello hello.cpp )
add_executable(arguments arguments.cpp)
add_executable(array_of_threads array_of_threads.cpp)
add_executable(bank bank_example/bank.cpp )
add_executable(bank_recursive bank_example/bank_recursive.cpp)
add_executable(bank_loop bank_example/bank_loop.cpp)
add_executable(shared_mutex shared_mutex.cpp)
add_executable(recursive_mutex recursive_mutex.cpp)
add_executable(bank_transfer bank_example/bank_transfer.cpp)
add_executable(atomic atomic.cpp)
add_executable(atomic_flag atomic_flag.cpp)
add_executable(atomic_bool sem_2/atomic_bool.cpp)
add_executable(seq_order sem_2/seq_order.cpp)
add_executable(async sem_2/async.cpp )
add_executable(async_sum sem_2/async_sum.cpp)
add_executable(promise sem_2/promise.cpp)
add_executable(relaxed_order sem_2/relaxed_order.cpp)
add_executable(release_acquire sem_2/release_acquire.cpp)
add_executable(rel_acq sem_2/rel_acq.cpp)
add_executable(release_consume sem_2/release_consume.cpp)
add_executable(consume sem_2/consume.cpp)
add_executable(future.cpp sem_2/future.cpp)
add_executable(packeged_task sem_2/packeged_task.cpp)
add_executable(atomic_fence sem_2/atomic_fence.cpp)
add_executable(shared_future sem_2/shared_future.cpp)
add_executable(harry_potter harry_potter.cpp)
add_executable(IntegralBogdanov MIEM/advanced/IntegralBogdanov.cpp)
add_executable(miem1 MIEM/advanced/ConsoleApplication4.cpp)
add_executable(hp_faizulina MIEM/advanced/harry_potter_faizulina.cpp)
add_executable(hp_ramazan MIEM/advanced/harry_ramazan.cpp)
add_executable(hp_ziganshin MIEM/advanced/harry_ziganshin.cpp)